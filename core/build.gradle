apply plugin: 'java'

buildscript {
    repositories {
//        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath group: 'commons-io', name: 'commons-io', version: '2.5'
        classpath group: 'org.zeroturnaround', name: 'zt-zip', version: '1.9'

    }
}

// Find location of android jar relative to ANDROID_HOME
def android_platform = "$sdkdir/platforms/android-$sdkver"

// Check to see if required API exists
// TODO: Look for any higher SDK and use it.
if (!file(android_platform).exists()) {
    logger.error "Android SDK $sdkver could not be found in $sdkdir"
}

repositories {
        //jcenter()
        flatDir {dirs 'library', android_platform}
}

dependencies {
    compile name: 'android'
    
    // android-support-v4.jar is in $sdkdir/extras/android/support/v4 
    compile name: 'android-support-v4'
    
    // Could not find the source of the wearable aars in Android Studio, so far
    // these two repositories seem to have up-to-date versions:
    // http://mvn.sibext.com/com/google/android/support/wearable/
    // http://uiq3.sourceforge.net/Repository/com/google/android/support/wearable/
    // MavenCentral and JCenter don't seem to have any wearable file.
    // Use the wear-update script to create a new wearable-$version jar
    compile name: 'wearable-1.4.0'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/']
        }
        resources {
            srcDirs = ['src/']
        }        
    }
}


// Create Jar
jar {    
    manifest {
        attributes(
                "Manifest-Version": "1.0",
                "Gradle-Version": "$gradle.gradleVersion"
        )
    }
    

}

import groovy.util.AntBuilder
import java.nio.file.Files
import static java.nio.file.StandardCopyOption.*;

//import org.apache.commons.io.FileUtils
//import org.zeroturnaround.zip.ZipUtil


task dist {
    doLast {
        // make copy of jar file as zip
        Files.copy(file("$buildDir/libs/core.jar").toPath(),
                   file("$buildDir/libs/android-core.zip").toPath(), REPLACE_EXISTING);
                        
        //FileUtils.copyDirectory(file("src/assets"), file("$buildDir/zip/assets"))
        //FileUtils.copyDirectory(file("$buildDir/classes/main"), file("$buildDir/zip/"))
        //ZipUtil.pack(file("$buildDir/zip"), new File("$buildDir/libs/android-core.zip"))
    }
}

dist.dependsOn build